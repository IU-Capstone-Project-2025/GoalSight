services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - goalsight-network
      
  backend:
    container_name: goalsight-backend
    build: 
      context: ../../
      dockerfile: docker/production/Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ../../backend:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=goalsight.settings
    depends_on:
      - db
    working_dir: /app/goalsight
    networks:
      - goalsight-network

  frontend:
    container_name: goalsight-frontend
    build: 
      context: ../../
      dockerfile: docker/production/Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_API_URL=http://${API_URL}:8000
    depends_on:
      - backend
    networks:
      - goalsight-network

  nginx:
    container_name: goalsight-nginx
    build:
      context: ../..
      dockerfile: docker/production/Dockerfile.nginx
    ports:
      - "8080:80"
    depends_on:
      - backend
      - frontend
    networks:
      - goalsight-network

networks:
  goalsight-network:
    external: true
    driver: bridge 

volumes:
  postgres_data:
