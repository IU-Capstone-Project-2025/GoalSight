name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/goalsight
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Graphviz system dependencies
        run: sudo apt-get update && sudo apt-get install -y graphviz graphviz-dev
      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build backend Docker image
        working-directory: backend
        run: docker build -f Dockerfile.prod -t goalsight-backend .
      - name: Run migrations in backend container
        run: |
          docker run --rm \
            -e DATABASE_NAME=test_db \
            -e DATABASE_USER=test_user \
            -e DATABASE_PASSWORD=test_pass \
            -e DATABASE_HOST=host.docker.internal \
            -e DATABASE_PORT=5432 \
            goalsight-backend python goalsight/manage.py migrate
      - name: Run tests in backend container
        run: |
          docker run --rm \
            -e DATABASE_NAME=test_db \
            -e DATABASE_USER=test_user \
            -e DATABASE_PASSWORD=test_pass \
            -e DATABASE_HOST=host.docker.internal \
            -e DATABASE_PORT=5432 \
            goalsight-backend python goalsight/manage.py test

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run component tests
        run: npm run test:components
      - name: Run API integration tests
        run: npm run test:api
      - name: Run end-to-end tests
        run: npm run test:e2e
      - name: Generate coverage for components
        run: npm run test:coverage:components
      - name: Generate coverage for API integration
        run: npm run test:coverage:api
      - name: Lint
        run: npm run lint || echo "Lint errors (not failing build)"
